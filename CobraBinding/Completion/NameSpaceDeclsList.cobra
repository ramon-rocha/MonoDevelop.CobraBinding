use Cobra.Compiler

use MonoDevelop.Ide.CodeCompletion

use ICSharpCode.NRefactory.Completion

namespace Completion

class NameSpaceDeclsList inherits CobraCompletionList
	"""
	This class is a completion data list whose entries are the declarations inside the given NameSpace.
	"""
	
	test singleFile
		ast = CobraCompletionTextEditorExtension.createTestData

		ns1 = ast.topNameSpace.memberForName("TopLevelNameSpace") to NameSpace
		ns2 = ns1.memberForName("SecondLevelNameSpace") to NameSpace
		ns3 = ns2.memberForName("ThirdLevelNameSpace")to NameSpace
		
		astData = NameSpaceDeclsList(ast.topNameSpace)
		assert astData.nameSpace is ast.topNameSpace
		assert astData.count == ast.topNameSpace.declsInOrder.count
		
		data1 = NameSpaceDeclsList(ns1)
		assert data1.nameSpace is ns1
		assert data1.count == ns1.declsInOrder.count
		
		data2 = NameSpaceDeclsList(ns2)
		assert data2.nameSpace is ns2
		assert data2.count == ns2.declsInOrder.count
		
		data3 = NameSpaceDeclsList(ns3)
		assert data3.nameSpace is ns3
		# extension declarations are not included in completion proposals
		assert data3.count == 3
		assert ns3.declsInOrder.count == 5
		
	test multipleFiles
		# TODO: Include decls from a different source file but in the same namespace
		pass
	
	get nameSpace from var as NameSpace
	
	cue init(ns as NameSpace)
		base.init
		_nameSpace = ns		
		
		for d in ns.declsInOrder
			# dots in the name are usually compiler generated
			# and should not be included in the final list
			if "." not in d.name
				.add(NamedNodeData(d))
