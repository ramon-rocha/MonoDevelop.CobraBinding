
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.CobraBinding.Gui
{
	public partial class CompilerBuildOptionsPanelWidget
	{
		private global::Gtk.VBox vboxTop;
		private global::Gtk.Frame framePerfQualOptions;
		private global::Gtk.Alignment alignPerfQualOptions;
		private global::Gtk.Table tablePerfQualOptions;
		private global::Gtk.CheckButton checkAsserts;
		private global::Gtk.CheckButton checkNilChecks;
		private global::Gtk.CheckButton checkOptimize;
		private global::Gtk.CheckButton checkTests;
		private global::Gtk.CheckButton checkTraces;
		private global::Gtk.HBox hboxContracts;
		private global::Gtk.Label labelContracts;
		private global::Gtk.ComboBox comboContracts;
		private global::Gtk.HSeparator hseparatorPerfQualOptions;
		private global::Gtk.RadioButton radioPerfQualCustom;
		private global::Gtk.RadioButton radioPerfQualDefault;
		private global::Gtk.RadioButton radioPerfQualTurbo;
		private global::Gtk.Label labelPerfQualOptions;
		private global::Gtk.Frame frameDevDeployOptions;
		private global::Gtk.Alignment alignDevDeployOptions;
		private global::Gtk.Table tableDevDeployOptions;
		private global::Gtk.CheckButton checkEmbedRunTime;
		private global::Gtk.CheckButton checkKeepIntermediateFiles;
		private global::Gtk.ComboBox comboDebugInfo;
		private global::Gtk.ComboBox comboNumberType;
		private global::Gtk.Entry entryCobraArgs;
		private global::Gtk.Label labelCobraArgs;
		private global::Gtk.Label labelDebugInfo;
		private global::Gtk.Label labelNumberType;
		private global::Gtk.Label labelDevDepolyOptions;
		private global::Gtk.Frame frameBackEndOptions;
		private global::Gtk.Alignment alignBackEnd;
		private global::Gtk.Table tableBackEnd;
		private global::Gtk.ComboBox comboCompilerBackEnd;
		private global::Gtk.Entry entryNativeCompilerArgs;
		private global::Gtk.FileChooserButton filechooserNativeCompilerPath;
		private global::Gtk.Label labelCompilerBackEnd;
		private global::Gtk.Label labelNativeCompilerArgs;
		private global::Gtk.Label labelNativeCompilerPath;
		private global::Gtk.Label labelBackEndOptions;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.CobraBinding.Gui.CompilerBuildOptionsPanelWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoDevelop.CobraBinding.Gui.CompilerBuildOptionsPanelWidget";
			// Container child MonoDevelop.CobraBinding.Gui.CompilerBuildOptionsPanelWidget.Gtk.Container+ContainerChild
			this.vboxTop = new global::Gtk.VBox ();
			this.vboxTop.Name = "vboxTop";
			this.vboxTop.Spacing = 6;
			this.vboxTop.BorderWidth = ((uint)(6));
			// Container child vboxTop.Gtk.Box+BoxChild
			this.framePerfQualOptions = new global::Gtk.Frame ();
			this.framePerfQualOptions.Name = "framePerfQualOptions";
			this.framePerfQualOptions.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child framePerfQualOptions.Gtk.Container+ContainerChild
			this.alignPerfQualOptions = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.alignPerfQualOptions.Name = "alignPerfQualOptions";
			this.alignPerfQualOptions.LeftPadding = ((uint)(12));
			this.alignPerfQualOptions.TopPadding = ((uint)(6));
			this.alignPerfQualOptions.BottomPadding = ((uint)(6));
			// Container child alignPerfQualOptions.Gtk.Container+ContainerChild
			this.tablePerfQualOptions = new global::Gtk.Table (((uint)(4)), ((uint)(3)), false);
			this.tablePerfQualOptions.Name = "tablePerfQualOptions";
			this.tablePerfQualOptions.RowSpacing = ((uint)(6));
			this.tablePerfQualOptions.ColumnSpacing = ((uint)(6));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.checkAsserts = new global::Gtk.CheckButton ();
			this.checkAsserts.CanFocus = true;
			this.checkAsserts.Name = "checkAsserts";
			this.checkAsserts.Label = global::Mono.Unix.Catalog.GetString ("Include Asserts");
			this.checkAsserts.Active = true;
			this.checkAsserts.DrawIndicator = true;
			this.checkAsserts.UseUnderline = true;
			this.tablePerfQualOptions.Add (this.checkAsserts);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.checkAsserts]));
			w1.TopAttach = ((uint)(2));
			w1.BottomAttach = ((uint)(3));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.checkNilChecks = new global::Gtk.CheckButton ();
			this.checkNilChecks.CanFocus = true;
			this.checkNilChecks.Name = "checkNilChecks";
			this.checkNilChecks.Label = global::Mono.Unix.Catalog.GetString ("Include Nil Checks");
			this.checkNilChecks.Active = true;
			this.checkNilChecks.DrawIndicator = true;
			this.checkNilChecks.UseUnderline = true;
			this.tablePerfQualOptions.Add (this.checkNilChecks);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.checkNilChecks]));
			w2.TopAttach = ((uint)(2));
			w2.BottomAttach = ((uint)(3));
			w2.LeftAttach = ((uint)(2));
			w2.RightAttach = ((uint)(3));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.checkOptimize = new global::Gtk.CheckButton ();
			this.checkOptimize.CanFocus = true;
			this.checkOptimize.Name = "checkOptimize";
			this.checkOptimize.Label = global::Mono.Unix.Catalog.GetString ("Optimize");
			this.checkOptimize.DrawIndicator = true;
			this.checkOptimize.UseUnderline = true;
			this.tablePerfQualOptions.Add (this.checkOptimize);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.checkOptimize]));
			w3.TopAttach = ((uint)(3));
			w3.BottomAttach = ((uint)(4));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.checkTests = new global::Gtk.CheckButton ();
			this.checkTests.CanFocus = true;
			this.checkTests.Name = "checkTests";
			this.checkTests.Label = global::Mono.Unix.Catalog.GetString ("Include Tests");
			this.checkTests.Active = true;
			this.checkTests.DrawIndicator = true;
			this.checkTests.UseUnderline = true;
			this.tablePerfQualOptions.Add (this.checkTests);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.checkTests]));
			w4.TopAttach = ((uint)(3));
			w4.BottomAttach = ((uint)(4));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.checkTraces = new global::Gtk.CheckButton ();
			this.checkTraces.CanFocus = true;
			this.checkTraces.Name = "checkTraces";
			this.checkTraces.Label = global::Mono.Unix.Catalog.GetString ("Include Traces");
			this.checkTraces.Active = true;
			this.checkTraces.DrawIndicator = true;
			this.checkTraces.UseUnderline = true;
			this.tablePerfQualOptions.Add (this.checkTraces);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.checkTraces]));
			w5.TopAttach = ((uint)(3));
			w5.BottomAttach = ((uint)(4));
			w5.LeftAttach = ((uint)(2));
			w5.RightAttach = ((uint)(3));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.hboxContracts = new global::Gtk.HBox ();
			this.hboxContracts.Name = "hboxContracts";
			this.hboxContracts.Spacing = 6;
			// Container child hboxContracts.Gtk.Box+BoxChild
			this.labelContracts = new global::Gtk.Label ();
			this.labelContracts.Name = "labelContracts";
			this.labelContracts.Xalign = 0F;
			this.labelContracts.LabelProp = global::Mono.Unix.Catalog.GetString ("Contracts:");
			this.hboxContracts.Add (this.labelContracts);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hboxContracts [this.labelContracts]));
			w6.Position = 0;
			w6.Expand = false;
			w6.Fill = false;
			// Container child hboxContracts.Gtk.Box+BoxChild
			this.comboContracts = global::Gtk.ComboBox.NewText ();
			this.comboContracts.AppendText (global::Mono.Unix.Catalog.GetString ("Inline"));
			this.comboContracts.AppendText (global::Mono.Unix.Catalog.GetString ("Methods"));
			this.comboContracts.AppendText (global::Mono.Unix.Catalog.GetString ("None"));
			this.comboContracts.Name = "comboContracts";
			this.comboContracts.Active = 0;
			this.hboxContracts.Add (this.comboContracts);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hboxContracts [this.comboContracts]));
			w7.Position = 1;
			w7.Expand = false;
			w7.Fill = false;
			this.tablePerfQualOptions.Add (this.hboxContracts);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.hboxContracts]));
			w8.TopAttach = ((uint)(2));
			w8.BottomAttach = ((uint)(3));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.hseparatorPerfQualOptions = new global::Gtk.HSeparator ();
			this.hseparatorPerfQualOptions.Name = "hseparatorPerfQualOptions";
			this.tablePerfQualOptions.Add (this.hseparatorPerfQualOptions);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.hseparatorPerfQualOptions]));
			w9.TopAttach = ((uint)(1));
			w9.BottomAttach = ((uint)(2));
			w9.RightAttach = ((uint)(3));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.radioPerfQualCustom = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Custom"));
			this.radioPerfQualCustom.CanFocus = true;
			this.radioPerfQualCustom.Name = "radioPerfQualCustom";
			this.radioPerfQualCustom.Active = true;
			this.radioPerfQualCustom.DrawIndicator = true;
			this.radioPerfQualCustom.UseUnderline = true;
			this.radioPerfQualCustom.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.tablePerfQualOptions.Add (this.radioPerfQualCustom);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.radioPerfQualCustom]));
			w10.LeftAttach = ((uint)(2));
			w10.RightAttach = ((uint)(3));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.radioPerfQualDefault = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Default"));
			this.radioPerfQualDefault.CanFocus = true;
			this.radioPerfQualDefault.Name = "radioPerfQualDefault";
			this.radioPerfQualDefault.DrawIndicator = true;
			this.radioPerfQualDefault.UseUnderline = true;
			this.radioPerfQualDefault.Group = this.radioPerfQualCustom.Group;
			this.tablePerfQualOptions.Add (this.radioPerfQualDefault);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.radioPerfQualDefault]));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tablePerfQualOptions.Gtk.Table+TableChild
			this.radioPerfQualTurbo = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("Turbo"));
			this.radioPerfQualTurbo.CanFocus = true;
			this.radioPerfQualTurbo.Name = "radioPerfQualTurbo";
			this.radioPerfQualTurbo.DrawIndicator = true;
			this.radioPerfQualTurbo.UseUnderline = true;
			this.radioPerfQualTurbo.Group = this.radioPerfQualCustom.Group;
			this.tablePerfQualOptions.Add (this.radioPerfQualTurbo);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.tablePerfQualOptions [this.radioPerfQualTurbo]));
			w12.LeftAttach = ((uint)(1));
			w12.RightAttach = ((uint)(2));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			this.alignPerfQualOptions.Add (this.tablePerfQualOptions);
			this.framePerfQualOptions.Add (this.alignPerfQualOptions);
			this.labelPerfQualOptions = new global::Gtk.Label ();
			this.labelPerfQualOptions.Name = "labelPerfQualOptions";
			this.labelPerfQualOptions.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Performance and Quality Options</b>");
			this.labelPerfQualOptions.UseMarkup = true;
			this.framePerfQualOptions.LabelWidget = this.labelPerfQualOptions;
			this.vboxTop.Add (this.framePerfQualOptions);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.vboxTop [this.framePerfQualOptions]));
			w15.Position = 0;
			w15.Expand = false;
			w15.Fill = false;
			// Container child vboxTop.Gtk.Box+BoxChild
			this.frameDevDeployOptions = new global::Gtk.Frame ();
			this.frameDevDeployOptions.Name = "frameDevDeployOptions";
			this.frameDevDeployOptions.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frameDevDeployOptions.Gtk.Container+ContainerChild
			this.alignDevDeployOptions = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.alignDevDeployOptions.Name = "alignDevDeployOptions";
			this.alignDevDeployOptions.LeftPadding = ((uint)(12));
			this.alignDevDeployOptions.TopPadding = ((uint)(6));
			this.alignDevDeployOptions.BottomPadding = ((uint)(6));
			// Container child alignDevDeployOptions.Gtk.Container+ContainerChild
			this.tableDevDeployOptions = new global::Gtk.Table (((uint)(3)), ((uint)(3)), false);
			this.tableDevDeployOptions.Name = "tableDevDeployOptions";
			this.tableDevDeployOptions.RowSpacing = ((uint)(6));
			this.tableDevDeployOptions.ColumnSpacing = ((uint)(6));
			// Container child tableDevDeployOptions.Gtk.Table+TableChild
			this.checkEmbedRunTime = new global::Gtk.CheckButton ();
			this.checkEmbedRunTime.CanFocus = true;
			this.checkEmbedRunTime.Name = "checkEmbedRunTime";
			this.checkEmbedRunTime.Label = global::Mono.Unix.Catalog.GetString ("Embed Run Time");
			this.checkEmbedRunTime.DrawIndicator = true;
			this.checkEmbedRunTime.UseUnderline = true;
			this.tableDevDeployOptions.Add (this.checkEmbedRunTime);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.tableDevDeployOptions [this.checkEmbedRunTime]));
			w16.TopAttach = ((uint)(1));
			w16.BottomAttach = ((uint)(2));
			w16.LeftAttach = ((uint)(2));
			w16.RightAttach = ((uint)(3));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableDevDeployOptions.Gtk.Table+TableChild
			this.checkKeepIntermediateFiles = new global::Gtk.CheckButton ();
			this.checkKeepIntermediateFiles.CanFocus = true;
			this.checkKeepIntermediateFiles.Name = "checkKeepIntermediateFiles";
			this.checkKeepIntermediateFiles.Label = global::Mono.Unix.Catalog.GetString ("Keep Intermediate Files");
			this.checkKeepIntermediateFiles.DrawIndicator = true;
			this.checkKeepIntermediateFiles.UseUnderline = true;
			this.tableDevDeployOptions.Add (this.checkKeepIntermediateFiles);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.tableDevDeployOptions [this.checkKeepIntermediateFiles]));
			w17.LeftAttach = ((uint)(2));
			w17.RightAttach = ((uint)(3));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableDevDeployOptions.Gtk.Table+TableChild
			this.comboDebugInfo = global::Gtk.ComboBox.NewText ();
			this.comboDebugInfo.AppendText (global::Mono.Unix.Catalog.GetString ("Full"));
			this.comboDebugInfo.AppendText (global::Mono.Unix.Catalog.GetString ("PDB Only"));
			this.comboDebugInfo.AppendText (global::Mono.Unix.Catalog.GetString ("Off"));
			this.comboDebugInfo.Name = "comboDebugInfo";
			this.comboDebugInfo.Active = 0;
			this.tableDevDeployOptions.Add (this.comboDebugInfo);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.tableDevDeployOptions [this.comboDebugInfo]));
			w18.LeftAttach = ((uint)(1));
			w18.RightAttach = ((uint)(2));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableDevDeployOptions.Gtk.Table+TableChild
			this.comboNumberType = global::Gtk.ComboBox.NewText ();
			this.comboNumberType.AppendText (global::Mono.Unix.Catalog.GetString ("decimal (default)"));
			this.comboNumberType.AppendText (global::Mono.Unix.Catalog.GetString ("float"));
			this.comboNumberType.AppendText (global::Mono.Unix.Catalog.GetString ("float32"));
			this.comboNumberType.AppendText (global::Mono.Unix.Catalog.GetString ("float64"));
			this.comboNumberType.Name = "comboNumberType";
			this.comboNumberType.Active = 0;
			this.tableDevDeployOptions.Add (this.comboNumberType);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.tableDevDeployOptions [this.comboNumberType]));
			w19.TopAttach = ((uint)(1));
			w19.BottomAttach = ((uint)(2));
			w19.LeftAttach = ((uint)(1));
			w19.RightAttach = ((uint)(2));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableDevDeployOptions.Gtk.Table+TableChild
			this.entryCobraArgs = new global::Gtk.Entry ();
			this.entryCobraArgs.CanFocus = true;
			this.entryCobraArgs.Name = "entryCobraArgs";
			this.entryCobraArgs.IsEditable = true;
			this.entryCobraArgs.InvisibleChar = '•';
			this.tableDevDeployOptions.Add (this.entryCobraArgs);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.tableDevDeployOptions [this.entryCobraArgs]));
			w20.TopAttach = ((uint)(2));
			w20.BottomAttach = ((uint)(3));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(3));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableDevDeployOptions.Gtk.Table+TableChild
			this.labelCobraArgs = new global::Gtk.Label ();
			this.labelCobraArgs.Name = "labelCobraArgs";
			this.labelCobraArgs.Xalign = 0F;
			this.labelCobraArgs.LabelProp = global::Mono.Unix.Catalog.GetString ("Cobra Arguments:");
			this.tableDevDeployOptions.Add (this.labelCobraArgs);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.tableDevDeployOptions [this.labelCobraArgs]));
			w21.TopAttach = ((uint)(2));
			w21.BottomAttach = ((uint)(3));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableDevDeployOptions.Gtk.Table+TableChild
			this.labelDebugInfo = new global::Gtk.Label ();
			this.labelDebugInfo.Name = "labelDebugInfo";
			this.labelDebugInfo.Xalign = 0F;
			this.labelDebugInfo.LabelProp = global::Mono.Unix.Catalog.GetString ("Debug Information:");
			this.tableDevDeployOptions.Add (this.labelDebugInfo);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.tableDevDeployOptions [this.labelDebugInfo]));
			w22.XOptions = ((global::Gtk.AttachOptions)(4));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableDevDeployOptions.Gtk.Table+TableChild
			this.labelNumberType = new global::Gtk.Label ();
			this.labelNumberType.Name = "labelNumberType";
			this.labelNumberType.Xalign = 0F;
			this.labelNumberType.LabelProp = global::Mono.Unix.Catalog.GetString ("Number Option:");
			this.tableDevDeployOptions.Add (this.labelNumberType);
			global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.tableDevDeployOptions [this.labelNumberType]));
			w23.TopAttach = ((uint)(1));
			w23.BottomAttach = ((uint)(2));
			w23.XOptions = ((global::Gtk.AttachOptions)(4));
			w23.YOptions = ((global::Gtk.AttachOptions)(4));
			this.alignDevDeployOptions.Add (this.tableDevDeployOptions);
			this.frameDevDeployOptions.Add (this.alignDevDeployOptions);
			this.labelDevDepolyOptions = new global::Gtk.Label ();
			this.labelDevDepolyOptions.Name = "labelDevDepolyOptions";
			this.labelDevDepolyOptions.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Development and Deployment Options</b>");
			this.labelDevDepolyOptions.UseMarkup = true;
			this.frameDevDeployOptions.LabelWidget = this.labelDevDepolyOptions;
			this.vboxTop.Add (this.frameDevDeployOptions);
			global::Gtk.Box.BoxChild w26 = ((global::Gtk.Box.BoxChild)(this.vboxTop [this.frameDevDeployOptions]));
			w26.Position = 1;
			w26.Expand = false;
			w26.Fill = false;
			// Container child vboxTop.Gtk.Box+BoxChild
			this.frameBackEndOptions = new global::Gtk.Frame ();
			this.frameBackEndOptions.Name = "frameBackEndOptions";
			this.frameBackEndOptions.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frameBackEndOptions.Gtk.Container+ContainerChild
			this.alignBackEnd = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.alignBackEnd.Name = "alignBackEnd";
			this.alignBackEnd.LeftPadding = ((uint)(12));
			this.alignBackEnd.TopPadding = ((uint)(6));
			// Container child alignBackEnd.Gtk.Container+ContainerChild
			this.tableBackEnd = new global::Gtk.Table (((uint)(3)), ((uint)(2)), false);
			this.tableBackEnd.Name = "tableBackEnd";
			this.tableBackEnd.RowSpacing = ((uint)(6));
			this.tableBackEnd.ColumnSpacing = ((uint)(6));
			// Container child tableBackEnd.Gtk.Table+TableChild
			this.comboCompilerBackEnd = global::Gtk.ComboBox.NewText ();
			this.comboCompilerBackEnd.AppendText (global::Mono.Unix.Catalog.GetString ("None (default)"));
			this.comboCompilerBackEnd.AppendText (global::Mono.Unix.Catalog.GetString ("Common Language Runtime"));
			this.comboCompilerBackEnd.AppendText (global::Mono.Unix.Catalog.GetString ("Java Virtual Machine"));
			this.comboCompilerBackEnd.AppendText (global::Mono.Unix.Catalog.GetString ("Objective-C"));
			this.comboCompilerBackEnd.Name = "comboCompilerBackEnd";
			this.comboCompilerBackEnd.Active = 0;
			this.tableBackEnd.Add (this.comboCompilerBackEnd);
			global::Gtk.Table.TableChild w27 = ((global::Gtk.Table.TableChild)(this.tableBackEnd [this.comboCompilerBackEnd]));
			w27.LeftAttach = ((uint)(1));
			w27.RightAttach = ((uint)(2));
			w27.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableBackEnd.Gtk.Table+TableChild
			this.entryNativeCompilerArgs = new global::Gtk.Entry ();
			this.entryNativeCompilerArgs.CanFocus = true;
			this.entryNativeCompilerArgs.Name = "entryNativeCompilerArgs";
			this.entryNativeCompilerArgs.IsEditable = true;
			this.entryNativeCompilerArgs.InvisibleChar = '•';
			this.tableBackEnd.Add (this.entryNativeCompilerArgs);
			global::Gtk.Table.TableChild w28 = ((global::Gtk.Table.TableChild)(this.tableBackEnd [this.entryNativeCompilerArgs]));
			w28.TopAttach = ((uint)(2));
			w28.BottomAttach = ((uint)(3));
			w28.LeftAttach = ((uint)(1));
			w28.RightAttach = ((uint)(2));
			w28.XOptions = ((global::Gtk.AttachOptions)(4));
			w28.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableBackEnd.Gtk.Table+TableChild
			this.filechooserNativeCompilerPath = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select a File"), ((global::Gtk.FileChooserAction)(0)));
			this.filechooserNativeCompilerPath.Name = "filechooserNativeCompilerPath";
			this.tableBackEnd.Add (this.filechooserNativeCompilerPath);
			global::Gtk.Table.TableChild w29 = ((global::Gtk.Table.TableChild)(this.tableBackEnd [this.filechooserNativeCompilerPath]));
			w29.TopAttach = ((uint)(1));
			w29.BottomAttach = ((uint)(2));
			w29.LeftAttach = ((uint)(1));
			w29.RightAttach = ((uint)(2));
			w29.XOptions = ((global::Gtk.AttachOptions)(4));
			w29.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableBackEnd.Gtk.Table+TableChild
			this.labelCompilerBackEnd = new global::Gtk.Label ();
			this.labelCompilerBackEnd.Name = "labelCompilerBackEnd";
			this.labelCompilerBackEnd.Xalign = 0F;
			this.labelCompilerBackEnd.LabelProp = global::Mono.Unix.Catalog.GetString ("Compiler Back-End:");
			this.tableBackEnd.Add (this.labelCompilerBackEnd);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.tableBackEnd [this.labelCompilerBackEnd]));
			w30.XOptions = ((global::Gtk.AttachOptions)(4));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableBackEnd.Gtk.Table+TableChild
			this.labelNativeCompilerArgs = new global::Gtk.Label ();
			this.labelNativeCompilerArgs.Name = "labelNativeCompilerArgs";
			this.labelNativeCompilerArgs.LabelProp = global::Mono.Unix.Catalog.GetString ("Native Compiler Args.:");
			this.tableBackEnd.Add (this.labelNativeCompilerArgs);
			global::Gtk.Table.TableChild w31 = ((global::Gtk.Table.TableChild)(this.tableBackEnd [this.labelNativeCompilerArgs]));
			w31.TopAttach = ((uint)(2));
			w31.BottomAttach = ((uint)(3));
			w31.XOptions = ((global::Gtk.AttachOptions)(4));
			w31.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableBackEnd.Gtk.Table+TableChild
			this.labelNativeCompilerPath = new global::Gtk.Label ();
			this.labelNativeCompilerPath.Name = "labelNativeCompilerPath";
			this.labelNativeCompilerPath.Xalign = 0F;
			this.labelNativeCompilerPath.LabelProp = global::Mono.Unix.Catalog.GetString ("Native Compiler Path:");
			this.tableBackEnd.Add (this.labelNativeCompilerPath);
			global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.tableBackEnd [this.labelNativeCompilerPath]));
			w32.TopAttach = ((uint)(1));
			w32.BottomAttach = ((uint)(2));
			w32.XOptions = ((global::Gtk.AttachOptions)(4));
			w32.YOptions = ((global::Gtk.AttachOptions)(4));
			this.alignBackEnd.Add (this.tableBackEnd);
			this.frameBackEndOptions.Add (this.alignBackEnd);
			this.labelBackEndOptions = new global::Gtk.Label ();
			this.labelBackEndOptions.Name = "labelBackEndOptions";
			this.labelBackEndOptions.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Back-End Native Compiler Options</b>");
			this.labelBackEndOptions.UseMarkup = true;
			this.frameBackEndOptions.LabelWidget = this.labelBackEndOptions;
			this.vboxTop.Add (this.frameBackEndOptions);
			global::Gtk.Box.BoxChild w35 = ((global::Gtk.Box.BoxChild)(this.vboxTop [this.frameBackEndOptions]));
			w35.Position = 2;
			w35.Expand = false;
			w35.Fill = false;
			this.Add (this.vboxTop);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
		}
	}
}
