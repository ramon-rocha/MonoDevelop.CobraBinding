
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.CobraBinding.Gui
{
	public partial class GeneralBuildOptionsPanelWidget
	{
		private global::Gtk.Table tableTop;
		private global::Gtk.ComboBox comboboxCompileTarget;
		private global::Gtk.ComboBoxEntry comboboxentryMainClass;
		private global::Gtk.ComboBoxEntry comboboxentryTestRunner;
		private global::Gtk.FileChooserButton filechooserApplicationIcon;
		private global::Gtk.Label labelApplicationIcon;
		private global::Gtk.Label labelMainClass;
		private global::Gtk.Label labelTarget;
		private global::Gtk.Label labelTestRunner;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.CobraBinding.Gui.GeneralBuildOptionsPanelWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoDevelop.CobraBinding.Gui.GeneralBuildOptionsPanelWidget";
			// Container child MonoDevelop.CobraBinding.Gui.GeneralBuildOptionsPanelWidget.Gtk.Container+ContainerChild
			this.tableTop = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
			this.tableTop.Name = "tableTop";
			this.tableTop.RowSpacing = ((uint)(6));
			this.tableTop.ColumnSpacing = ((uint)(6));
			// Container child tableTop.Gtk.Table+TableChild
			this.comboboxCompileTarget = global::Gtk.ComboBox.NewText ();
			this.comboboxCompileTarget.Name = "comboboxCompileTarget";
			this.tableTop.Add (this.comboboxCompileTarget);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.tableTop [this.comboboxCompileTarget]));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableTop.Gtk.Table+TableChild
			this.comboboxentryMainClass = global::Gtk.ComboBoxEntry.NewText ();
			this.comboboxentryMainClass.Name = "comboboxentryMainClass";
			this.tableTop.Add (this.comboboxentryMainClass);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.tableTop [this.comboboxentryMainClass]));
			w2.TopAttach = ((uint)(2));
			w2.BottomAttach = ((uint)(3));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableTop.Gtk.Table+TableChild
			this.comboboxentryTestRunner = global::Gtk.ComboBoxEntry.NewText ();
			this.comboboxentryTestRunner.Name = "comboboxentryTestRunner";
			this.tableTop.Add (this.comboboxentryTestRunner);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.tableTop [this.comboboxentryTestRunner]));
			w3.TopAttach = ((uint)(1));
			w3.BottomAttach = ((uint)(2));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableTop.Gtk.Table+TableChild
			this.filechooserApplicationIcon = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select an Icon File"), ((global::Gtk.FileChooserAction)(0)));
			this.filechooserApplicationIcon.Name = "filechooserApplicationIcon";
			this.filechooserApplicationIcon.LocalOnly = false;
			this.tableTop.Add (this.filechooserApplicationIcon);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.tableTop [this.filechooserApplicationIcon]));
			w4.TopAttach = ((uint)(3));
			w4.BottomAttach = ((uint)(4));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableTop.Gtk.Table+TableChild
			this.labelApplicationIcon = new global::Gtk.Label ();
			this.labelApplicationIcon.Name = "labelApplicationIcon";
			this.labelApplicationIcon.Xalign = 0F;
			this.labelApplicationIcon.LabelProp = global::Mono.Unix.Catalog.GetString ("Application Icon:");
			this.tableTop.Add (this.labelApplicationIcon);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.tableTop [this.labelApplicationIcon]));
			w5.TopAttach = ((uint)(3));
			w5.BottomAttach = ((uint)(4));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableTop.Gtk.Table+TableChild
			this.labelMainClass = new global::Gtk.Label ();
			this.labelMainClass.Name = "labelMainClass";
			this.labelMainClass.Xalign = 0F;
			this.labelMainClass.LabelProp = global::Mono.Unix.Catalog.GetString ("Main Class:");
			this.tableTop.Add (this.labelMainClass);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.tableTop [this.labelMainClass]));
			w6.TopAttach = ((uint)(2));
			w6.BottomAttach = ((uint)(3));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableTop.Gtk.Table+TableChild
			this.labelTarget = new global::Gtk.Label ();
			this.labelTarget.Name = "labelTarget";
			this.labelTarget.Xalign = 0F;
			this.labelTarget.LabelProp = global::Mono.Unix.Catalog.GetString ("Compile Target:");
			this.tableTop.Add (this.labelTarget);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.tableTop [this.labelTarget]));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableTop.Gtk.Table+TableChild
			this.labelTestRunner = new global::Gtk.Label ();
			this.labelTestRunner.Name = "labelTestRunner";
			this.labelTestRunner.Xalign = 0F;
			this.labelTestRunner.LabelProp = global::Mono.Unix.Catalog.GetString ("Test Runner:");
			this.tableTop.Add (this.labelTestRunner);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.tableTop [this.labelTestRunner]));
			w8.TopAttach = ((uint)(1));
			w8.BottomAttach = ((uint)(2));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.tableTop);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
		}
	}
}
